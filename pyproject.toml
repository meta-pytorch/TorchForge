# ---- All project specifications ---- #
[project]
name = "forge"
description = "A PyTorch native platform for post-training generative AI models"
readme = "README.md"
requires-python = ">=3.10, <3.13"
license = {file = "LICENSE"}
authors = [
    { name = "PyTorch Team", email = "packages@pytorch.org" },
]
keywords = ["pytorch", "training", "llm"]
dependencies = [
    # PyTorch
    "torch==2.9.0",
    "torchdata>=0.8.0",
    "torchtitan==0.2.0",
    "torchmonarch==0.1.2",
    "torchstore==0.1.2",
    # vLLM
    "vllm",
    # Hugging Face integrations
    "datasets>=2.21.0",
    "tokenizers",
    # Miscellaneous
    "omegaconf",
    "wandb",
    "hf_transfer",
    "six",
    "setuptools<80",
]
dynamic = ["version"]

[project.urls]
GitHub = "https://github.com/pytorch-labs/forge"
Documentation = "https://github.com/pytorch-labs/forge/tree/main/docs"
Issues = "https://github.com/pytorch-labs/forge/issues"

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "tensorboard",
    "expecttest",
    "tomli>=1.1.0",
    "anyio",
    "pytest-asyncio",
    "multiprocess",
]
docs = [
    "sphinx==7.2.6",
    "pytorch-sphinx-theme2==0.1.0",
    "docutils>=0.18.1,<0.21",
    "sphinx-design==0.6.1",
    "sphinxcontrib-mermaid==1.0.0",
    "sphinx-gallery==0.19.0",
    "myst-parser",
    "sphinx-sitemap==2.7.1",
    "sphinx-autodoc-typehints==1.25.3",
]

# ---- Explicit project build information ---- #
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["forge*"]

[tool.pytest.ini_options]
addopts = ["--showlocals"]  # show local variables in tracebacks
pythonpath = "."

[tool.uv.workspace]
members = [
    "forge",
]

# pytorch
[[tool.uv.index]]
name = "pytorch-cu128"
url  = "https://download.pytorch.org/whl/cu128"

# vllm
[[tool.uv.index]]
name = "vllm-forge"
url = "https://download.pytorch.org/whl/preview/forge"

[tool.uv.sources]
torch = { index = "pytorch-cu128" }
vllm = { index = "vllm-forge" }

[tool.uv]
# TODO: revert to stricter default uv strategy
index-strategy = "unsafe-best-match"
prerelease = "allow"
# TODO: add more backends
environments = [
    "sys_platform == 'linux'",
]
# override-dependencies = ["torch>2.7.1", "torchaudio>=2.7.1", "torchvision>=0.22.0"]
